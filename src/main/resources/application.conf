; ; ; akka.actor.deployment {
; ; ;
; ; ;     /random-router-pool {
; ; ;         router = random-pool
; ; ;         nr-of-instances = 3
; ; ;     }
; ; ; }
; ; ;
; ;
; ; MembersService {
; ;     akka {
; ;         actor {
; ;             provide = "akka.remote.RemoteActorRefProvider"
; ;         }
; ;         remote {
; ;             enabled-transports = ["akka.remote.netty.tcp"]
; ;             netty.tcp {
; ;                 hostname = "127.0.0.1"
; ;                 port = 2552
; ;             }
; ;         }
; ;     }
; ; }
; ;
;
; MembersService {
;     akka {
;         actor {
;             provider = "akka.remote.RemoteActorRefProvider"
;         }
;         remote {
;             enabled-transports = ["akka.remote.netty.tcp"]
;             netty.tcp {
;             hostname = "127.0.0.1"
;             port = 2552
;             }
;         }
;     }
; }
;
; MemberServiceLookup {
;     akka {
;         actor {
;             provider = "akka.remote.RemoteActorRefProvider"
;         }
;         remote {
;             enabled-transports = ["akka.remote.netty.tcp"]
;             netty.tcp {
;                 hostname = "127.0.0.1"
;                 port = 2553
;             }
;         }
;     }
; }
;

; Building a Cluster

Frontend {
    akka {
        actor {
            provider = "akka.cluster.ClusterActorRefProvider"
        }
        remote {
            log-remote-lifecycle-events = off
            netty.tcp {
                hostname = "127.0.0.1"
                port = 2551
            }
        }

        cluster {
            roles = ["frontend"]
            seed-nodes = [
                "akka.tcp://ClusterSystem@127.0.0.1:2551"]

            auto-unreachable-after = 10s
        }
    }
}

Backend {
    akka{
        actor {
            provider = "akka.cluster.ClusterActorRefProvider"
        }
        remote {
            log-remote-lifecycle-events = off
            netty.tcp {
                hostname = "127.0.0.1"
                port = 0
            }
        }

        cluster {
            roles = ["backend"]
            seed-nodes = [
                "akka.tcp://ClusterSystem@127.0.0.1:2551"]

            auto-down-unreachable-after = 10s
        }
    }
}

akka.cluster.min-nr-of-members = 3

akka.cluster.role {
    frontend.min-nr-of-members = 1
    backend.min-nr-of-members = 2
}

akka.actor.deployment {
    /frontend/backendRouter {
        # Router type provided by metrics extension.
        router = adaptive-group
        # Router parameter specific for metrics extension.
        # metrics-selector = heap
        # metrics-selector = load
        # metrics-selector = cpu
        metrics-selector = mix
        #
        nr-of-instances = 100
        routees.paths = ["/users/backend"]
        cluster {
            enabled = on
            use-role = backend
            allow-local-routees = off
        }
    }
}

